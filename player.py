from config import Config

class Player:
    def __init__(self, user_id, name):
        self.user_id = user_id
        self.name = name
        self.level = 1
        self.hp = 100
        self.max_hp = 100
        self.gold = 50
        self.exp = 0
        self.attack = 10
        self.total_exp = 0
        self.inventory = []
        self.in_battle = False
        self.current_monster = None
        self.equipped_weapon = None
        self.equipped_armor = None
        self.pet = None
        self.attack_bonus = 0
        self.hp_bonus = 0
        self.exp_bonus = 0
        self.gold_bonus = 0
        
    def add_exp(self, amount):
        self.exp += amount
        self.total_exp += amount
        if self.exp >= self.level * Config.BASE_EXP_REQUIREMENT:
            return self.level_up()
        return False
    
    def level_up(self):
        self.level += 1
        self.max_hp += 20
        self.hp = self.max_hp
        self.attack += 5
        self.exp = 0
        return True
        
    def heal(self, amount):
        self.hp = min(self.max_hp, self.hp + amount)
        
    def take_damage(self, amount):
        self.hp = max(0, self.hp - amount)
        return self.hp > 0
        
    def equip_weapon(self, weapon_name):
        weapon = Config.SHOP_ITEMS["weapons"][weapon_name]
        self.equipped_weapon = weapon_name
        self.attack_bonus = weapon["attack"]
        
    def equip_armor(self, armor_name):
        armor = Config.SHOP_ITEMS["armor"][armor_name]
        self.equipped_armor = armor_name
        self.hp_bonus = armor["hp"]
        self.max_hp = 100 + self.hp_bonus
        self.hp = min(self.hp, self.max_hp)
        
    def set_pet(self, pet_name):
        pet = Config.SHOP_ITEMS["pets"][pet_name]
        self.pet = pet_name
        self.exp_bonus = pet["exp_bonus"]
        self.gold_bonus = pet["gold_bonus"]
        
    def status_text(self):
        exp_needed = self.level * Config.BASE_EXP_REQUIREMENT
        equipped_items = []
        if self.equipped_weapon:
            equipped_items.append(f"‚öîÔ∏è –û—Ä—É–∂–∏–µ: {self.equipped_weapon}")
        if self.equipped_armor:
            equipped_items.append(f"üõ°Ô∏è –ë—Ä–æ–Ω—è: {self.equipped_armor}")
        if self.pet:
            equipped_items.append(f"üêæ –ü–∏—Ç–æ–º–µ—Ü: {self.pet}")
            
        equipped_text = "\n".join(equipped_items) if equipped_items else "–ù–µ—Ç —ç–∫–∏–ø–∏—Ä–æ–≤–∫–∏"
        
        return (
            f"üßô‚Äç‚ôÇÔ∏è {self.name}, –≤–æ—Ç —Ç–≤–æ–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n\n"
            f"üîπ –£—Ä–æ–≤–µ–Ω—å: {self.level}\n"
            f"‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤—å–µ: {self.hp}/{self.max_hp}\n"
            f"üí∞ –ó–æ–ª–æ—Ç–æ: {self.gold}\n"
            f"üîÆ –û–ø—ã—Ç: {self.exp}/{exp_needed}\n"
            f"‚öîÔ∏è –ê—Ç–∞–∫–∞: {self.attack + self.attack_bonus}\n"
            f"üåü –í—Å–µ–≥–æ –æ–ø—ã—Ç–∞: {self.total_exp}\n\n"
            f"üéí –≠–∫–∏–ø–∏—Ä–æ–≤–∫–∞:\n{equipped_text}"
        )
    
    def sell_item(self, item_index):
        if 0 <= item_index < len(self.inventory):
            item = self.inventory.pop(item_index)
            # –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–¥–∞–∂–∏ - –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø—Ä–æ–¥–∞—é—Ç—Å—è –∑–∞ 20 –∑–æ–ª–æ—Ç–∞
            self.gold += 20
            return f"‚úÖ –ü—Ä–µ–¥–º–µ—Ç '{item}' –ø—Ä–æ–¥–∞–Ω –∑–∞ 20 –∑–æ–ª–æ—Ç–∞"
        return "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞"
    
    def inventory_text(self):
        if not self.inventory:
            return "üéí –¢–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç"
        items = "\n".join(f"‚Ä¢ {item}" for item in self.inventory)
        return f"üéí –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å ({len(self.inventory)}/{Config.INVENTORY_SIZE}):\n{items}"
    
    def add_to_inventory(self, item):
        if len(self.inventory) < Config.INVENTORY_SIZE:
            self.inventory.append(item)
            return True
        return False